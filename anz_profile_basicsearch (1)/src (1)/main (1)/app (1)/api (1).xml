<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<http:listener-config name="api-httpListenerConfig"
		host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
	<apikit:config name="api-config" raml="api.raml"
		consoleEnabled="false" doc:name="Router" />
	<http:request-config name="HTTP_Request_Configuration"
		host="192.168.0.115" port="9200" basePath="/anz_user/user_info" doc:name="HTTP Request Configuration" />
	<flow name="api-main">
		<http:listener config-ref="api-httpListenerConfig" path="/api/*"
			doc:name="HTTP" />
		<apikit:router config-ref="api-config" doc:name="APIkit Router" />
        <exception-strategy ref="Exception_Strategy" doc:name="Reference Exception Strategy"/>

	</flow>
	<flow name="api-console">
		<http:listener config-ref="api-httpListenerConfig" path="/console/*"
			doc:name="HTTP" />
		<apikit:console config-ref="api-config" doc:name="APIkit Console" />
	</flow>
   
	<apikit:mapping-exception-strategy
		name="api-apiKitGlobalExceptionstrategy">

		
		<apikit:mapping statusCode="404">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotFoundException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Resource not found&quot; }"
				doc:name="Set Payload" />

		</apikit:mapping>
		<apikit:mapping statusCode="405">
			<apikit:exception
				value="org.mule.module.apikit.exception.MethodNotAllowedException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"
				doc:name="Set Payload" />

		</apikit:mapping>
		<apikit:mapping statusCode="415">
			<apikit:exception
				value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"
				doc:name="Set Payload" />

		</apikit:mapping>
		<apikit:mapping statusCode="406">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotAcceptableException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"
				doc:name="Set Payload" />

		</apikit:mapping>
		<apikit:mapping statusCode="400">
			<apikit:exception
				value="org.mule.module.apikit.exception.BadRequestException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"
				doc:name="Set Payload" />

		</apikit:mapping>

	</apikit:mapping-exception-strategy>
    <flow name="get:/basicSearch:api-config">
        <set-variable variableName="params" value="#[message.inboundProperties.'http.query.params']" doc:name="paramsVariable"/>
        <set-payload value="{ &quot;query&quot; : { &quot;bool&quot; : {  &quot;should&quot; :   [    {&quot;match&quot; : { &quot;gender&quot; : &quot;#[flowVars.params.gender]&quot;  }},  {&quot;match&quot; : { &quot;religion&quot; : &quot;#[flowVars.params.religion]&quot; }}  ],    &quot;filter&quot; : {   &quot;range&quot; : {     &quot;weight&quot; : {        &quot;gte&quot; : #[flowVars.params.ageto],        &quot;lte&quot; : #[flowVars.params.agefrom]        }       }      }  }  },   &quot;from&quot;: #[flowVars.params.rangefrom],    &quot;size&quot; : #[flowVars.params.rangeto - flowVars.params.rangefrom + 1],   &quot;_source&quot; : [ &quot;gender&quot;, &quot;first_name&quot;, &quot;last_name&quot;, &quot;weight&quot; ]  }" doc:name="Set Payload"/>
        <set-session-variable variableName="httpmethod" value="#[message.inboundProperties['http.method']]" doc:name="Session Variable"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/" method="POST" doc:name="HTTP"/>
        <set-variable variableName="sources" value="#[[]]" doc:name="Variable"/>
   <enricher source="#[(_source in payload.hits.hits)]" target="#[flowVars.sources]" doc:name="Message Enricher">
            <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        </enricher>
        <set-payload value=" {   &quot;guid&quot;: &quot;#[flowVars.params.guid]&quot;, &quot;userid&quot;: &quot;#[flowVars.params.userid]&quot;,  &quot;responsedatetime&quot;: &quot;#[server.dateTime.withTimeZone('GMT+5:30').format('MM/dd/yyyy,HH:mm:ss')]&quot;,   &quot;responsefrom&quot;: &quot;ElasticSearch&quot;,   &quot;userid&quot;: &quot;#[flowVars.params.userid]&quot;,   &quot;geoLocation&quot;: &quot;#[flowVars.params.geoLocation]&quot;  }" doc:name="Set Payload"/>
        <json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
        <set-variable variableName="payload1" value="#[payload]" doc:name="Variable"/>
        <expression-transformer doc:name="Expression" expression="#[[            {      'header':         flowVars.payload1},        {  'body':         flowVars.sources}         ]]" mimeType="application/json"/>

        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="logservFlow" doc:name="logservFlow"/>
        <exception-strategy ref="Exception_Strategy" doc:name="Reference Exception Strategy"/>

   
    </flow>
  
</mule>
